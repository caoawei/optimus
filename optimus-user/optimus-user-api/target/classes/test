select
			IFNULL(a.id,r.id) transactionId,
			r.id order_id,
		    case when r.season_project_name is not null then r.season_project_name  when a.project_name is null then r.project_name else a.project_name end projectName,
		    case when r.season_project_id is not null then 9 else 0 end typeCode,
			CASE WHEN a.pay_status is null THEN CASE when s.status=4 then 1 when s.status=2 then -1 else 0 end else a.pay_status end payStatus,
		    case when (a.transfer_code is NULL or a.transfer_code != 3) and r.season_project_id is not null then r.season_project_id when a.project_id is null then r.project_id else a.project_id end projectId ,

            ifnull(sum(case when b.status=0 then  b.payable_interest else 0 end), 0) noPayInterest,
        	IFNULL(a.annualized_rate,s.rate+s.add_rate) annualizedRate,
		    IFNULL(p.annualized_rate,  a.annualized_rate) projectRate,

		    ifnull(a.invest_amount,s.invest_amount) investAmount,

		    min(b.start_time) startInterestTime,
			min(case b.rate_type when 4 then '9999-99-99' else b.start_time end) transferInterestTime,
			sum(case b.status when 0 then b.payable_principal else 0.0 end) canTransferAmount,

		    (case WHEN a.pay_status=2
			then  max(b.pay_date)
			else max(case b.status in (2,3) when 1 then b.end_interest_time else b.end_time end)
			end) endTime,
			/*a.transaction_end_time as endTime,*/

		    IFNULL(a.created_time,s.gmt_created) gmtCreated,
		    ifnull(sum(case when b.status=4 then 0 else b.real_pay_interest end), 0) payedInterest,

		    (
		      CASE
		      WHEN r.order_type=9 is not null THEN
		      	CASE
				WHEN s.transfering_amount > 0 THEN 1
				WHEN (s.status = 3 AND s.left_save_amount < s.invest_amount) THEN 2
				ELSE 0
				END
		      ELSE
				a.transfer_code
		      END
		    ) as transferCode,

		    r.status as orderStatus,
		    r.order_type as orderType,
		    r.auto_status as orderAutoStatus,
		    r.order_from as orderFrom,
		    a.property as property,

		    p.sell_channel as sellChannel,
		    p.additional_rate * 100 as addtionalRate,
		    p.unit_amount as unit_amount,
		    p.repayment as repayment,
		    p.status as projectStatus,

		    td.debt_type debtType,

		    SUM(
		      CASE
		      WHEN b.rate_type=4 THEN
		      	ifnull(b.payable_interest,0)
		      ELSE
		      	0
		      END
		    ) as subsidyIncome,
		    SUM(
		      CASE
		      WHEN (b.rate_type!=4 and b.status in (0,1,2)) THEN
		      	ifnull(b.payable_interest,0)
		      ELSE
		      	0
		      END
		    ) as inrestIncome,
			IFNULL((select IFNULL(sum(tc.amount), 0) from t_order_coupon tc where tc.transaction_id=a.id and tc.coupon_type in (1,3)), 0) couponIncome,
			IFNULL(a.transfer_reward, 0) as transferIncome,/*受让收益*/

		    IFNULL(p.float_refer_rate, 0) AS floatReferRate,
		    IFNULL(p.float_real_rate, 0) AS floatRealRate,
		    IFNULL(p.project_rate_type, 0) AS projectRateType

		from t_order r
		LEFT JOIN t_transaction a ON r.id = a.order_id
		LEFT JOIN t_set_transaction s on r.id=s.order_id and s.type=1
		left join t_project p on a.src_project_id = p.id
		left join t_debt td on p.target_id = td.id
		LEFT JOIN t_transfer_project tp on a.project_id=tp.id
		LEFT JOIN t_transaction_interest b ON b.transaction_id = a.id
		where
		   r.user_id = #{userId, jdbcType=BIGINT}
		   and r.status = 3
		   and (a.id is not null or s.id is not null)
		   and r.order_type not in(10,11,12)/*胡灵宝过滤*/